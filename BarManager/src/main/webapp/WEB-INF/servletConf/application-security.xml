<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security 
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<security:http pattern="/css/**" security="none">
  	</security:http>
  	
  	<security:http pattern="/home.*" security="none">
  	</security:http>
  	
   <security:http>
	    <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN" />
	    <security:intercept-url pattern="/private/**" access="ROLE_USER, ROLE_ADMIN" />
	    <security:form-login login-page="/login" default-target-url="/private/accountSummary" always-use-default-target="true"/>
	    <security:http-basic />
	    <security:logout logout-url="/logout" />
   </security:http>
   
   <bean name="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="usersByUsernameQuery" value="SELECT login as username, password, isActive as enabled FROM USER WHERE login=?"/>
		<property name="authoritiesByUsernameQuery" value="SELECT u.login as username, c.code as role FROM USER u, CODE c WHERE u.login=? and u.role=c.id"/>
	</bean>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userDetailsService">
			<security:password-encoder hash="sha">
				<security:salt-source user-property="login"/>
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>
  
</beans>